"""
Django settings for usuarios project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
# no se necesita
#import os

# esto dos import nos van a ayudar a leer archivos json
from django.core.exceptions import ImproperlyConfigured
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

# por usar unipath se comenta
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# usar unipath
from unipath import Path
BASE_DIR = Path(__file__).ancestor(3)



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# abre el archivo json y se le asigna a la variable f
with open("secret.json") as f:
    # carga el archivo y leelo
   secret = json.loads(f.read())
   
def get_secret(secret_name, secrets = secret ):
    try:
        return secret [secret_name]
    except:
        msg = "la variable %s no existe " % secret_name
        raise ImproperlyConfigured(msg)   
   
SECRET_KEY = get_secret('SECRET_KEY')

# Application definition


# se comenta  y renombra para mejorar la organizacion de INSTALLED_APPS
# INSTALLED_APPS

# solo aplicaciones de Django
DJANGO_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',   
)

# para aplicaciones locales
LOCAL_APPS = (    
)

# para aplicaciones de terceros
THIRD_PARTY_APPS = ()

# final apps instaladas
INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + LOCAL_APPS



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'usuarios.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # se comenta para crear una carpeta templats
        #'DIRS': [],
        
        # nueva ubicacion de la carpeta templates
        'DIRS': [BASE_DIR.child('templates')],
        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'usuarios.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True